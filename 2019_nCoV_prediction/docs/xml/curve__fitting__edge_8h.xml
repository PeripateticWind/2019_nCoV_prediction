<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="curve__fitting__edge_8h" kind="file" language="C++">
    <compoundname>curve_fitting_edge.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">Eigen/Core</includes>
    <includes local="no">g2o/core/base_unary_edge.h</includes>
    <includes refid="curve__fitting__vertex_8h" local="yes">curve_fitting_vertex.h</includes>
    <includedby refid="nCoV_8h" local="yes">include/nCoV.h</includedby>
    <incdepgraph>
      <node id="83">
        <label>Eigen/Core</label>
      </node>
      <node id="86">
        <label>g2o/core/base_vertex.h</label>
      </node>
      <node id="84">
        <label>g2o/core/base_unary_edge.h</label>
      </node>
      <node id="81">
        <label>include/curve_fitting_edge.h</label>
        <link refid="curve_fitting_edge.h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>curve_fitting_vertex.h</label>
        <link refid="curve__fitting__vertex_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="89">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="88">
        <label>include/nCoV.h</label>
        <link refid="nCoV_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>src/nCoV.cpp</label>
        <link refid="nCoV_8cpp"/>
      </node>
      <node id="87">
        <label>include/curve_fitting_edge.h</label>
        <link refid="curve_fitting_edge.h"/>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classCurveFittingEdge" prot="public">CurveFittingEdge</innerclass>
    <briefdescription>
<para>The G2O model&apos;s edge implementation file. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>PeripateticWind (<ulink url="mailto:zhangzhihong@stu.xjtu.edu.cn">zhangzhihong@stu.xjtu.edu.cn</ulink>) </para></simplesect>
<simplesect kind="version"><para>1.0.0 </para></simplesect>
<simplesect kind="date"><para>2020-02-10 22:44:06 </para></simplesect>
<simplesect kind="par"><title>LastEditor</title><para>PeripateticWind </para></simplesect>
<simplesect kind="par"><title>LastEditTime</title><para>2020-02-10 22:44:06 </para></simplesect>
<simplesect kind="par"><title>Email</title><para><ulink url="mailto:zhangzhihong@stu.xjtu.edu.cn">zhangzhihong@stu.xjtu.edu.cn</ulink> </para></simplesect>
<simplesect kind="par"><title>Company</title><para>Xi&apos;an Jiaotong University </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2020 PeripateticWind. All rights reserved. </para></simplesect>
<simplesect kind="par"><title>License</title><para>Licensed under the MIT License. </para></simplesect>
<simplesect kind="par"><title>Changelog</title><para><table rows="2" cols="4"><caption>Change Log</caption>
<row>
<entry thead="yes"><para>Date </para></entry><entry thead="yes"><para>Version </para></entry><entry thead="yes"><para>Author </para></entry><entry thead="yes"><para>Description </para></entry></row>
<row>
<entry thead="no"><para>2020-02-10 22:44:06 </para></entry><entry thead="no"><para>1.0.0 </para></entry><entry thead="no"><para>PeripateticWind </para></entry><entry thead="no"><para>change log </para></entry></row>
</table>
</para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="preprocessor">#ifndef<sp/>__CURVE_FITTING_EDGE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CURVE_FITTING_EDGE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>G2O</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;g2o/core/base_unary_edge.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>USER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="curve__fitting__vertex_8h" kindref="compound">curve_fitting_vertex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"></codeline>
<codeline lineno="42" refid="classCurveFittingEdge" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCurveFittingEdge" kindref="compound">CurveFittingEdge</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>g2o::BaseUnaryEdge&lt;1,<sp/>double,<sp/>CurveFittingVertex&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"></codeline>
<codeline lineno="53" refid="classCurveFittingEdge_1a3a7ee01bc38a44a179faa78d78bcdc0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCurveFittingEdge_1a3a7ee01bc38a44a179faa78d78bcdc0b" kindref="member">CurveFittingEdge</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>BaseUnaryEdge()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="classCurveFittingEdge_1ad0cf7b012c9e4585a6919b982f148449" kindref="member">_x</ref>(x)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classCurveFittingEdge_1a4497b29e2f168d877d7a858457b69fd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCurveFittingEdge_1a4497b29e2f168d877d7a858457b69fd1" kindref="member">computeError</ref>()<sp/>override<sp/><sp/></highlight><highlight class="comment">//<sp/>本函数提供误差计算模型</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCurveFittingVertex" kindref="compound">CurveFittingVertex</ref>*<sp/>vertex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classCurveFittingVertex" kindref="compound">CurveFittingVertex</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_vertices[0]);<sp/><sp/></highlight><highlight class="comment">//<sp/>获取顶点</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d<sp/><sp/><sp/><sp/><sp/>vertexEstimation<sp/>=<sp/>vertex-&gt;estimate();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>获取估计值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_error(0,<sp/>0)<sp/>=<sp/>_measurement<sp/>-<sp/>vertexEstimation(0,<sp/>0)<sp/>*<sp/>vertexEstimation(1,<sp/>0)<sp/>/<sp/>(vertexEstimation(1,<sp/>0)<sp/>+<sp/>(vertexEstimation(0,<sp/>0)<sp/>-<sp/>vertexEstimation(1,<sp/>0))<sp/>*<sp/>std::exp(-vertexEstimation(2,<sp/>0)<sp/>*<sp/><ref refid="classCurveFittingEdge_1ad0cf7b012c9e4585a6919b982f148449" kindref="member">_x</ref>));<sp/><sp/></highlight><highlight class="comment">//<sp/>计算误差值<sp/>_measurement为观测值,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classCurveFittingEdge_1a517490d29ac656c6a0fc100b1af7cd9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCurveFittingEdge_1a517490d29ac656c6a0fc100b1af7cd9f" kindref="member">read</ref>(std::istream&amp;<sp/>in)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="74" refid="classCurveFittingEdge_1a70bde4a6cbed5fc825a069c6f1f45caa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCurveFittingEdge_1a70bde4a6cbed5fc825a069c6f1f45caa" kindref="member">write</ref>(std::ostream&amp;<sp/>out)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classCurveFittingEdge_1ad0cf7b012c9e4585a6919b982f148449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCurveFittingEdge_1ad0cf7b012c9e4585a6919b982f148449" kindref="member">_x</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>!__CURVE_FITTING_EDGE_H__</highlight></codeline>
    </programlisting>
    <location file="include/curve_fitting_edge.h"/>
  </compounddef>
</doxygen>
