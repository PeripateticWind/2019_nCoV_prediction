<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="nCoV_8cpp" kind="file" language="C++">
    <compoundname>nCoV.cpp</compoundname>
    <includes refid="nCoV_8h" local="yes">nCoV.h</includes>
    <incdepgraph>
      <node id="151">
        <label>g2o/core/block_solver.h</label>
      </node>
      <node id="146">
        <label>cmath</label>
      </node>
      <node id="156">
        <label>glog/log.h</label>
      </node>
      <node id="150">
        <label>Eigen/Core</label>
      </node>
      <node id="148">
        <label>fstream</label>
      </node>
      <node id="160">
        <label>g2o/core/base_vertex.h</label>
      </node>
      <node id="143">
        <label>nCoV.h</label>
        <link refid="nCoV_8h"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>src/nCoV.cpp</label>
        <link refid="nCoV.cpp"/>
        <childnode refid="143" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>ctime</label>
      </node>
      <node id="154">
        <label>g2o/core/optimization_algorithm_levenberg.h</label>
      </node>
      <node id="158">
        <label>g2o/core/base_unary_edge.h</label>
      </node>
      <node id="157">
        <label>curve_fitting_edge.h</label>
        <link refid="curve__fitting__edge_8h"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>g2o/solvers/dense/linear_solver_dense.h</label>
      </node>
      <node id="159">
        <label>curve_fitting_vertex.h</label>
        <link refid="curve__fitting__vertex_8h"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>iostream</label>
      </node>
      <node id="153">
        <label>g2o/core/optimization_algorithm_gauss_newton.h</label>
      </node>
      <node id="145">
        <label>chrono</label>
      </node>
      <node id="152">
        <label>g2o/core/optimization_algorithm_dogleg.h</label>
      </node>
      <node id="144">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>the <ref refid="classnCoV" kindref="compound">nCoV</ref> class implementation file </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>PeripateticWind (<ulink url="mailto:zhangzhihong@stu.xjtu.edu.cn">zhangzhihong@stu.xjtu.edu.cn</ulink>) </para></simplesect>
<simplesect kind="version"><para>1.0.0 </para></simplesect>
<simplesect kind="date"><para>2020-02-10 22:43:01 </para></simplesect>
<simplesect kind="par"><title>LastEditor</title><para>PeripateticWind </para></simplesect>
<simplesect kind="par"><title>LastEditTime</title><para>2020-02-10 22:43:01 </para></simplesect>
<simplesect kind="par"><title>Email</title><para><ulink url="mailto:zhangzhihong@stu.xjtu.edu.cn">zhangzhihong@stu.xjtu.edu.cn</ulink> </para></simplesect>
<simplesect kind="par"><title>Company</title><para>Xi&apos;an Jiaotong University </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2020 PeripateticWind. All rights reserved. </para></simplesect>
<simplesect kind="par"><title>License</title><para>Licensed under the MIT License. </para></simplesect>
<simplesect kind="par"><title>Changelog</title><para><table rows="2" cols="4"><caption>Change Log</caption>
<row>
<entry thead="yes"><para>Date </para></entry><entry thead="yes"><para>Version </para></entry><entry thead="yes"><para>Author </para></entry><entry thead="yes"><para>Description </para></entry></row>
<row>
<entry thead="no"><para>2020-02-10 22:43:01 </para></entry><entry thead="no"><para>1.0.0 </para></entry><entry thead="no"><para>PeripateticWind </para></entry><entry thead="no"><para>change log </para></entry></row>
</table>
</para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="23"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nCoV_8h" kindref="compound">nCoV.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="classnCoV_1a30d4a90c5f401cf6943e104ec737dc48" kindref="member">nCoV::nCoV</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>predictDays)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_predictDays(predictDays)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>要预测的天数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>_dataFile(</highlight><highlight class="stringliteral">&quot;../data/data.txt&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">//<sp/>数据文件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>_parameter{<sp/>100000.0,<sp/>58.0,<sp/>0.02123106<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>待优化的变量，依次为SIR模型中的<sp/>S0(易感人群),<sp/>I0(感染人群),<sp/>γβ(传染期接触数),初始参数值<sp/>I0从2020.01.17开始算起，一方面从17日开始有明显增长，另一方面缺少16日的数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/><ref refid="classnCoV_1a6980bf4492a8ce437b15ac9625eacfce" kindref="member">_parameterEstimated</ref>{<sp/>0.0,<sp/>0.0,<sp/>0.0<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>优化后的参数值初值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classnCoV_1a9585e58cac7c3c4cf26fe0291b809f06" kindref="member">_dataFile</ref>.is_open())</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_FATAL<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;open<sp/>data<sp/>file<sp/>failed<sp/>and<sp/>program<sp/>exit!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;load<sp/>data<sp/>file<sp/>successfully!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>填充数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempData;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classnCoV_1a9585e58cac7c3c4cf26fe0291b809f06" kindref="member">_dataFile</ref><sp/>&gt;&gt;<sp/>tempData)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnCoV_1a8e122688ffc8ee32df05f0cb6ef25920" kindref="member">_yData</ref>.push_back(tempData);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnCoV_1a9585e58cac7c3c4cf26fe0291b809f06" kindref="member">_dataFile</ref>.close();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classnCoV_1a8e122688ffc8ee32df05f0cb6ef25920" kindref="member">_yData</ref>.size();<sp/>++i)<sp/><sp/></highlight><highlight class="comment">//<sp/>从2020.1.17日开始计算到当前日期(以天为单位)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnCoV_1a11802f3972f62a07b77b1847f1d010a8" kindref="member">_xData</ref>.push_back(i);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnCoV_1a7182f86ff0f0f607cd461ebe738fb9da" kindref="member">_dataSize</ref><sp/>=<sp/><ref refid="classnCoV_1a8e122688ffc8ee32df05f0cb6ef25920" kindref="member">_yData</ref>.size();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verbose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>DLOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;_x:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::for_each(<ref refid="classnCoV_1a11802f3972f62a07b77b1847f1d010a8" kindref="member">_xData</ref>.begin(),<sp/><ref refid="classnCoV_1a11802f3972f62a07b77b1847f1d010a8" kindref="member">_xData</ref>.end(),<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>{<sp/>DLOG_INFO<sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;<sp/>});</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>DLOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;_y:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::for_each(<ref refid="classnCoV_1a8e122688ffc8ee32df05f0cb6ef25920" kindref="member">_yData</ref>.begin(),<sp/><ref refid="classnCoV_1a8e122688ffc8ee32df05f0cb6ef25920" kindref="member">_yData</ref>.end(),<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>{<sp/>DLOG_INFO<sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;<sp/>});</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnCoV_1acf5ddd73cab8522622b2602258507c08" kindref="member">optimize</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>模型优化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnCoV_1a5a0b30d27da271601d45c144c6a3da2d" kindref="member">predict</ref>();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>模型预测</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnCoV_1acf5ddd73cab8522622b2602258507c08" kindref="member">nCoV::optimize</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>构建图优化，先设定g2o</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>矩阵块：每个误差项优化变量的维度为3，误差值维度为1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>g2o::BlockSolver&lt;g2o::BlockSolverTraits&lt;3,<sp/>1&gt;&gt;<sp/>Block;<sp/><sp/></highlight><highlight class="comment">//<sp/>待优化变量为一个三维向量<sp/>//block<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>线性方程求解器：稠密的增量方程</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Block::LinearSolverType&gt;<sp/>linearSolver(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>g2o::LinearSolverDense&lt;Block::PoseMatrixType&gt;());<sp/><sp/></highlight><highlight class="comment">//<sp/>线性求解器</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Block&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Block(std::move(linearSolver)));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//梯度下降方法，GN,<sp/>LM,<sp/>DogLeg<sp/>三种优化方法，选择LM优化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>g2o::OptimizationAlgorithm*<sp/>solver(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>g2o::OptimizationAlgorithmLevenberg(std::move(solverPtr)));<sp/><sp/></highlight><highlight class="comment">//<sp/>配置求解器<sp/>LM优化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>g2o::OptimizationAlgorithm<sp/>*solver(new<sp/>g2o::OptimizationAlgorithmGaussNewton(std::move(solver_ptr)));<sp/>//<sp/>配置求解器<sp/>GN优化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>g2o::OptimizationAlgorithm<sp/>*solver(new<sp/>g2o::OptimizationAlgorithmDogleg(std::move(solver_ptr)));<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>配置求解器<sp/>DogLeg优化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>g2o::SparseOptimizer<sp/>optimizer;<sp/><sp/></highlight><highlight class="comment">//<sp/>图模型</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizer.setAlgorithm(solver);<sp/><sp/></highlight><highlight class="comment">//设置求解器</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizer.setVerbose(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//关闭输出调试</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>图模型中有一个节点，边的个数为从2020.01.17到当前天的天数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>向图中添加顶点</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCurveFittingVertex" kindref="compound">CurveFittingVertex</ref>*<sp/>vertex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCurveFittingVertex" kindref="compound">CurveFittingVertex</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>vertex-&gt;setEstimate(Eigen::Vector3d(<ref refid="classnCoV_1ae34cb58fd08703599158b69853b659a2" kindref="member">_parameter</ref>[0],<sp/><ref refid="classnCoV_1ae34cb58fd08703599158b69853b659a2" kindref="member">_parameter</ref>[1],<sp/><ref refid="classnCoV_1ae34cb58fd08703599158b69853b659a2" kindref="member">_parameter</ref>[2]));<sp/><sp/></highlight><highlight class="comment">//<sp/>设置该顶点的初始观测量</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>vertex-&gt;setId(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置该顶点的ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizer.addVertex(vertex);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>将该顶点添加到图模型中</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>向图中添加边</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classnCoV_1a8e122688ffc8ee32df05f0cb6ef25920" kindref="member">_yData</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCurveFittingEdge" kindref="compound">CurveFittingEdge</ref>*<sp/>edge<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCurveFittingEdge" kindref="compound">CurveFittingEdge</ref>(<ref refid="classnCoV_1a11802f3972f62a07b77b1847f1d010a8" kindref="member">_xData</ref>[i]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>构造边</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge-&gt;setId(i);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置该边的ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge-&gt;setVertex(0,<sp/>vertex);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置连接的顶点</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge-&gt;setMeasurement(<ref refid="classnCoV_1a8e122688ffc8ee32df05f0cb6ef25920" kindref="member">_yData</ref>[i]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>设置该边的观测值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge-&gt;setInformation(Eigen::Matrix&lt;double,<sp/>1,<sp/>1&gt;::Identity());<sp/><sp/></highlight><highlight class="comment">//<sp/>信息矩阵：协方差矩阵之逆<sp/>Gussian分布的协方差的逆</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer.addEdge(edge);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>将该边添加到图模型中</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>执行优化</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::steady_clock::time_point<sp/>t1<sp/>=<sp/>std::chrono::steady_clock::now();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizer.initializeOptimization();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>optimizer.optimize(100);<sp/><sp/></highlight><highlight class="comment">//<sp/>参数为迭代次数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double&gt;<sp/>timeUsed<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(std::chrono::steady_clock::now()<sp/>-<sp/>t1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;solve<sp/>time<sp/>cost:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timeUsed.count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>seconds.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>输出优化值</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnCoV_1a6980bf4492a8ce437b15ac9625eacfce" kindref="member">_parameterEstimated</ref><sp/>=<sp/>vertex-&gt;estimate();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;estimated<sp/>matrix:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classnCoV_1a6980bf4492a8ce437b15ac9625eacfce" kindref="member">_parameterEstimated</ref>.transpose();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;estimated<sp/>SIR<sp/>model:<sp/>y=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classnCoV_1a6980bf4492a8ce437b15ac9625eacfce" kindref="member">_parameterEstimated</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classnCoV_1a6980bf4492a8ce437b15ac9625eacfce" kindref="member">_parameterEstimated</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classnCoV_1a6980bf4492a8ce437b15ac9625eacfce" kindref="member">_parameterEstimated</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;+(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classnCoV_1a6980bf4492a8ce437b15ac9625eacfce" kindref="member">_parameterEstimated</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classnCoV_1a6980bf4492a8ce437b15ac9625eacfce" kindref="member">_parameterEstimated</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)e^(-&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classnCoV_1a6980bf4492a8ce437b15ac9625eacfce" kindref="member">_parameterEstimated</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x))&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_WARNING<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>2019_nCoV<sp/>SIR<sp/>model<sp/>S0<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_parameterEstimated[0]);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_WARNING<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>SARS<sp/>SIR<sp/>model<sp/>S0<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>5237.0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_WARNING<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2019_nCoV<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>LOG_RED<sp/>&lt;&lt;<sp/>_parameterEstimated[0]<sp/>/<sp/>5237.0<sp/>&lt;&lt;<sp/>LOG_YELLOW<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>times<sp/>of<sp/>the<sp/>SARS!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>parameterFile(</highlight><highlight class="stringliteral">&quot;../data/parameter.txt&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>模型参数文件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parameterFile.is_open())</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_FATAL<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>parameter<sp/>to<sp/>file<sp/>failed<sp/>and<sp/>program<sp/>exit!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>parameterFile<sp/>&lt;&lt;<sp/>_parameterEstimated[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_parameterEstimated[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_parameterEstimated[2];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>parameterFile.close();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;write<sp/>parameter<sp/>to<sp/>file<sp/>successfully!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnCoV_1a5a0b30d27da271601d45c144c6a3da2d" kindref="member">nCoV::predict</ref>()</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTime<sp/>=<sp/>time(0);<sp/><sp/></highlight><highlight class="comment">//<sp/>获取当前日期</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>strTime;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>用以将日期转为字符串</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>date\t\tinfected&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>表格标题</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>输出已有数据</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>currentTime<sp/>-=<sp/>86400<sp/>*<sp/><ref refid="classnCoV_1a7182f86ff0f0f607cd461ebe738fb9da" kindref="member">_dataSize</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>日期调整到第一天</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----optimization-----&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classnCoV_1a7182f86ff0f0f607cd461ebe738fb9da" kindref="member">_dataSize</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTime<sp/>+=<sp/>86400;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>日期增加一天</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strTime.str(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>清空stringstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strTime<sp/>&lt;&lt;<sp/>std::put_time(std::localtime(&amp;currentTime),<sp/></highlight><highlight class="stringliteral">&quot;%Y%m%d&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>设置日期格式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/>strTime.str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classnCoV_1a8e122688ffc8ee32df05f0cb6ef25920" kindref="member">_yData</ref>[i];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----prediction-----&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>currentTime<sp/>=<sp/>time(0);<sp/><sp/></highlight><highlight class="comment">//<sp/>重置为当前日期</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classnCoV_1a71d73f9132ff05684bb8f830bd1f4232" kindref="member">_predictDays</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTime<sp/>+=<sp/>86400;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>日期增加一天</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strTime.str(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>清空stringstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strTime<sp/>&lt;&lt;<sp/>std::put_time(std::localtime(&amp;currentTime),<sp/></highlight><highlight class="stringliteral">&quot;%Y%m%d&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>设置日期格式</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>infected<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_parameterEstimated[0]<sp/>*<sp/>_parameterEstimated[1]<sp/>/<sp/>(_parameterEstimated[1]<sp/>+<sp/>(_parameterEstimated[0]<sp/>-<sp/>_parameterEstimated[1])<sp/>*<sp/>exp(-_parameterEstimated[2]<sp/>*<sp/>(_dataSize<sp/>+<sp/>i)))<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_INFO<sp/>&lt;&lt;<sp/>strTime.str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>infected;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/nCoV.cpp"/>
  </compounddef>
</doxygen>
